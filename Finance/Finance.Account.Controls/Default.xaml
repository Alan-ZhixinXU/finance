<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Finance.Account.Controls">
    <SolidColorBrush x:Key="DataGridBrush" Color="LightBlue"/>
    <SolidColorBrush x:Key="Brush" Color="#FF6D819A"/>

    <Style TargetType="{x:Type DataGrid}">
        <!--拖动改变单元格大小-->
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <!--网格线颜色-->
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DataGridBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DataGridBrush}"/>
    </Style>
    <!--标题栏样式-->
    <Style TargetType="{x:Type DataGridColumnHeader}" >
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Background" Value="{StaticResource DataGridBrush}" />
        <Setter Property="Height" Value="30"/>
    </Style>

    <!--行样式触发-->
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Width" Value="0" />
    </Style>
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style x:Key="totalRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="LightYellow"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>-->
    </Style>
    <!--单元格样式触发-->
    <!--<Style x:Key="DataGridCellAlignRight" TargetType="{x:Type DataGridCell}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>-->

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Background" Value="{StaticResource Brush}"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="#00000000">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="move" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="move" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.2" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="move" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.03"/>
                                        <DoubleAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.7" Duration="0:0:0.03"/>
                                        <ThicknessAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="(Margin)" To="0,2,0,0" Duration="0:0:0.03"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}">
                            <Grid>
                                <!--<Border CornerRadius="3" Background="#000000" Opacity="0.2"/>-->
                                <Border x:Name="back" CornerRadius="3" Background="{TemplateBinding Background}" Margin="0,0,0,3">
                                    <Grid>
                                        <Border x:Name="move" Background="#FFFFFFFF" CornerRadius="3" Opacity="0"/>
                                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="back" Property="Margin" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>